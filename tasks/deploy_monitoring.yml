---
- name: Create Storj Graphs Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ storj_monitoring_path }}/prometheus/conf"
    - "{{ storj_monitoring_path }}/prometheus/data"
    - "{{ storj_monitoring_path }}/grafana/lib"

- name: Create Prometheus Config
  template:
    src: "{{ storj_prometheus_config_template }}"
    dest: "{{ storj_monitoring_path }}/prometheus/conf/prometheus.yml"

- name: Setup Prometheus
  docker_container:
    container_default_behavior: compatibility
    networks_cli_compatible: no
    restart_policy: always
    name: storj-prometheus
    image: prom/prometheus
    memory: 128M
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time={{ storj_prometheus_retention }}'
    published_ports:
      - "9090:9090"
    volumes:
      - "{{ storj_monitoring_path }}/prometheus/conf:/etc/prometheus"
      - "{{ storj_monitoring_path }}/prometheus/data:/prometheus"
    networks:
      - name: "{{ storj_network_name }}"

- name: Merge Storj Network and additional Grafana Networks
  set_fact:
    grafana_networks: "{{ grafana_networks + [ item ]  }}"
  when: storj_grafana_additional_networks is defined
  with_items: "{{ storj_grafana_additional_networks }}"

- name: Setup Grafana
  docker_container:
    container_default_behavior: compatibility
    networks_cli_compatible: no
    restart_policy: always
    name: storj-grafana
    image: grafana/grafana
    memory: 128M
    volumes:
      - "{{ storj_monitoring_path }}/grafana/lib:/var/lib/grafana"
    networks: "{{ grafana_networks }}"
